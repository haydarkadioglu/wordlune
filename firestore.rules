rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Usernames collection for unique username checks
    match /usernames/{username} {
      allow read;
      allow create: if request.auth != null;
      // Allow a user to delete their own username mapping
      allow delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.username == username;
      // Prevent updates to avoid hijacking
      allow update: if false;
    }

    // User profiles (public and private data)
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create: if request.auth.uid == userId;
      allow delete: if false; // Users shouldn't delete their own profile doc directly

      // Login history is private to the user
      match /loginHistory/{historyId} {
        allow read, write: if request.auth.uid == userId;
      }
    }
    
    // Application-specific data, partitioned by user
    match /data/{userId} {
      allow read, create: if request.auth.uid == userId;
      allow update, delete: if false; // Document itself is just a container

      // Words collection, private to the user
      match /words/{wordId} {
        allow read, write, delete: if request.auth.uid == userId;
      }

      // Lists collection, private to the user
      match /lists/{listId} {
        allow read, write, delete: if request.auth.uid == userId;

        // Words within a specific list
        match /words/{listWordId} {
          allow read, write, delete: if request.auth.uid == userId;
        }
      }
    }
  }
}
