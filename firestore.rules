rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- User Data ---
    // Usernames must be unique. Publicly readable to check for existence.
    // Only the user can create their own username mapping, not update or delete.
    match /usernames/{username} {
      allow read;
      allow create: if request.auth != null;
      allow update, delete: if false; // Prevent modification
    }

    // User profile data.
    // Users can create their own profile.
    // Users can only read/update their own profile.
    match /users/{userId} {
      allow create: if request.auth.uid == userId;
      allow read, update: if request.auth.uid == userId;
      // Allow reading/writing to subcollections like loginHistory
      match /{allPaths=**} {
         allow read, write: if request.auth.uid == userId;
      }
    }
    
    // --- Application Data (Words, Lists) ---
    // Users can read and write to their own data segment.
    match /data/{userId}/{language}/{document=**} {
      allow read, write: if request.auth.uid == userId;
    }

    // --- Stories ---
    // Public stories can be read by anyone if they are published.
    // Admins can do anything.
    match /stories/{language}/stories/{storyId} {
      allow read: if resource.data.isPublished == true || get(/databases/$(database)/documents/admins/$(request.auth.uid)).exists();
      allow create: if request.auth != null;
      allow update: if request.auth.uid == resource.data.authorId || get(/databases/$(database)/documents/admins/$(request.auth.uid)).exists();
      allow delete: if get(/databases/$(database)/documents/stories/$(language)/stories/$(storyId)).data.authorId == request.auth.uid || get(/databases/$(database)/documents/admins/$(request.auth.uid)).exists();
    }
    
    // Users can query stories they authored across all languages.
    match /{path=**}/stories/{storyId} {
        allow read: if resource.data.authorId == request.auth.uid;
    }
    
    // --- Admin and Ban Lists ---
    // Only admins can read the full list of admins or bans.
    match /admins/{adminId} {
        allow read, write: if get(/databases/$(database)/documents/admins/$(request.auth.uid)).exists();
    }
    
    match /user_bans/{userId} {
        allow read, write: if get(/databases/$(database)/documents/admins/$(request.auth.uid)).exists();
    }
  }
}
