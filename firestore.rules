rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // --- User Data: Profiles & Usernames ---
    // Usernames must be unique. Publicly readable to check for existence.
    match /usernames/{username} {
      allow read;
      allow create: if request.auth != null;
      allow update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.username == username;
    }
    
    // User profile data. Users can only read/write their own profile.
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    // --- Word & List Data ---
    // Users can only read and write data under their own user ID.
    match /data/{userId}/{language}/{document=**} {
      allow read, write: if request.auth.uid == userId;
    }

    // --- Stories Data ---
    // Anyone can read published stories.
    match /stories/{language}/stories/{storyId} {
      allow read: if resource.data.isPublished == true;
      allow create: if request.auth != null;
      allow update: if request.auth.uid == resource.data.authorId;
      // Deletion is handled by the more specific rule below for security.
      allow delete: if get(/databases/$(database)/documents/stories_by_author/$(request.auth.uid)/stories/$(storyId)).data.authorId == request.auth.uid;
    }

    // --- Stories by Author ---
    // This collection is no longer primarily used for reads but is kept for potential future use 
    // and to ensure delete operations are secure and efficient.
    match /stories_by_author/{authorId}/stories/{storyId} {
        allow read, write: if request.auth.uid == authorId;
        // This rule is crucial. It allows a user to delete from their own subcollection without needing to read the document first,
        // which is safer and works with batch deletes.
        allow delete: if request.auth.uid == authorId;
    }

    // Collection group query for stories - allows a user to fetch all their stories across languages.
    match /{path=**}/stories/{storyId} {
      allow list: if request.query.get("authorId") == request.auth.uid;
    }

    // --- Admin & Moderation Data ---
    // Admins collection is readable only by admins (validation via backend).
    match /admins/{adminId} {
      allow read: if get(/databases/$(database)/documents/admins/$(request.auth.uid)).exists == true;
    }

    // Bans are not readable by clients.
    match /user_bans/{userId} {
      allow read, write: if false; 
    }
  }
}
