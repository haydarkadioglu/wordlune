
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // USERS: Publicly readable profile information.
    // WRITE: Only the user can create their own profile. No updates/deletes from client.
    match /users/{userId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update, delete: if false; // Updates managed server-side or via specific functions.
    }
    
    // USERNAMES: Used for unique username lookups.
    // READ: Anyone can read to check if a username exists.
    // WRITE: A user can only create a username document that points to their own UID.
    //        A user can only delete their own old username document.
    match /usernames/{username} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow delete: if request.auth != null && resource.data.userId == request.auth.uid;
      allow update: if false;
    }
    
    // DATA: Main container for user-specific data (words, lists, etc.)
    // READ/WRITE: Only the authenticated owner of the data can access it.
    match /data/{userId}/{document=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // STORIES: Publicly readable stories.
    // READ: Anyone can read stories.
    // WRITE: Only admins can write (create, update, delete) stories.
    match /stories/{storyId} {
      allow read: if true;
      allow write: if request.auth != null && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // ADMINS: A list of admin UIDs.
    // READ/WRITE: No one can read or write to this from the client.
    // This collection should only be managed from the Firebase Console for security.
    match /admins/{adminId} {
        allow read, write: if false;
    }
  }
}
