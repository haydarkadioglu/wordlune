rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Collection to enforce unique usernames
    // Document ID is the username in lowercase
    match /usernames/{username} {
      // Allow anyone authenticated to check if a username exists
      allow read: if request.auth != null;

      // Allow a user to create a document for their own username
      // The document must contain their userId
      allow create: if request.auth.uid == request.resource.data.userId;

      // Allow a user to delete their own old username document
      allow delete: if request.auth.uid == resource.data.userId;

      // Disallow updates to prevent hijacking
      allow update: if false;
    }

    // Main user data collection
    match /users/{userId} {
      // Allow a user to read, update, and create their own profile data
      allow read, update, create: if request.auth != null && request.auth.uid == userId;

      // Subcollection for general words
      match /words/{wordId} {
        allow read, write, delete: if request.auth != null && request.auth.uid == userId;
      }
      
      // Subcollection for custom lists
      match /lists/{listId} {
        allow read, write, delete: if request.auth != null && request.auth.uid == userId;
        
        // Words within a specific list
        match /words/{listWordId} {
           allow read, write, delete: if request.auth != null && request.auth.uid == userId;
        }
      }
      
      // Subcollection for login history
      match /loginHistory/{historyId} {
        allow create, read: if request.auth != null && request.auth.uid == userId;
        allow update: if false;
        allow delete: if request.auth.uid == userId;
      }
    }
  }
}
