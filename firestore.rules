
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Admins: Only allow a user to read their own admin document. Deny list/write.
    match /admins/{userId} {
      allow read: if isSignedIn() && isOwner(userId);
      allow list, write: if false;
    }
    
    // Usernames: Allow creation if the username is not taken. Allow deletion only by the owner.
    match /usernames/{username} {
       allow read; // Allow checking if a username exists
       allow create: if isSignedIn(); // Allow any signed-in user to attempt to create
       allow delete: if isSignedIn() && isOwner(resource.data.userId); // Allow owner to delete (for username changes)
       allow update: if false;
    }

    // User profiles: Users can read/update their own profile.
    match /users/{userId} {
      allow read, update: if isSignedIn() && isOwner(userId);
      allow create, delete: if false;
    }
    
    // Stories: Allow anyone to read, but only admins to write/delete.
    match /stories/{language}/stories/{storyId} {
      allow read;
      allow write, delete: if isSignedIn() && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // Versions: Allow anyone to read public version info (like app links).
    match /versions/{versionId} {
      allow read;
      allow write: if false; // Only updatable from the server/console
    }

    // User data (words, lists, etc.): Only accessible by the owner.
    match /data/{userId}/{document=**} {
      allow read, write, delete: if isSignedIn() && isOwner(userId);
    }
  }
}
