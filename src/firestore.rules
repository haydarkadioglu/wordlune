rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- USER DATA (Private) ---
    // Users can only access their own data folder, which contains their word lists.
    match /data/{userId}/{document=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // --- USERNAMES (Public Read, Private Write) ---
    // Anyone can read to check for username existence.
    // User can create their username mapping upon registration.
    // User can update their own username mapping (via transaction).
    match /usernames/{username} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // --- USER PROFILES (Private) ---
    // Users can only read and update their own profile.
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
    }

    // --- PUBLIC STORIES ---
    // This is the main collection for all stories shown to the community.
    match /veriler/{language}/stories/{storyId} {
      // Anyone can read a story if it is published.
      allow read: if resource.data.isPublished == true;
      
      // Logged-in, non-banned users can create stories.
      allow create: if request.auth != null && !exists(/databases/$(database)/documents/user_bans/$(request.auth.uid));
      
      // Users can only update/delete their own stories and must not be banned.
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.authorId && !exists(/databases/$(database)/documents/user_bans/$(request.auth.uid));
    }

    // --- STORIES BY AUTHOR (Private user collection) ---
    // This collection is for users to manage their own stories (drafts included).
    match /stories_by_author/{userId}/stories/{storyId} {
        // A user can perform any action (read, write, delete) only on their own stories collection.
        allow read, write, delete: if request.auth != null && request.auth.uid == userId;
    }
    
    // --- ADMINS (Read-only for clients) ---
    // Determines who has admin privileges. Only backend processes should write here.
    match /admins/{userId} {
      allow read: if true;
      allow write: if false; // Should be managed from server-side or console
    }

    // --- USER BANS (Read-only for clients) ---
    // Manages user bans. Only backend/admin processes should write here.
    match /user_bans/{userId} {
      allow read: if true;
      allow write: if false; // Should be managed by admins via trusted environment
    }
    
    // --- VERSIONS (Public Read) ---
    // Used for app versioning, like Android app link.
    match /versions/{versionId} {
      allow read: if true;
    }
  }
}
