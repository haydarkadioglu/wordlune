
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function isNotBanned() {
      return isSignedIn() && !exists(/databases/$(database)/documents/user_bans/$(request.auth.uid));
    }

    // --- Data Collections (User vocabulary lists) ---
    match /data/{userId}/{document=**} {
      allow read, write: if isUser(userId);
    }
    
    // --- User Profiles and Usernames ---
    match /users/{userId} {
      allow read: if isSignedIn();
      allow write: if isUser(userId);
    }

    match /usernames/{username} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && request.auth.uid == get(/databases/$(database)/documents/usernames/$(username)).data.userId;
    }
    
    // --- Public and Author-Specific Stories ---
    match /stories/{language}/stories/{storyId} {
        allow read: if resource.data.isPublished == true || (isSignedIn() && request.auth.uid == resource.data.authorId);
        allow create: if isSignedIn() && isNotBanned();
        allow update, delete: if isSignedIn() && request.auth.uid == resource.data.authorId && isNotBanned();
    }
    
    match /stories_by_author/{userId}/stories/{storyId} {
        allow read, write: if isUser(userId) && isNotBanned();
    }

    // --- Admin and Versioning ---
    match /admins/{adminId} {
        allow read: if isSignedIn(); 
    }
    
    match /versions/{versionId} {
      allow read: if true;
    }
    
    // --- User Moderation ---
    match /user_bans/{userId} {
      // Typically only admins should write here, but for simplicity in this app, we'll keep it locked down.
      // Admin write access would be handled via secure backend functions in a production app.
      allow read: if isSignedIn();
      allow write: if false; // Prevent client-side writes
    }
  }
}
